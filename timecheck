from typing import Counter
import PySimpleGUI as sg
import datetime
import time

sg.theme('Dark Red')
time_format = '%H:%M'

def validate_time_input(time):
    try:
        validate_time = datetime.datetime.strptime(time,time_format)
        return validate_time
    except:
        return False

def date_time_to_string(date_time):
    return str(date_time.hour)+':'+str(date_time.minute)

data = [
    ['9:21 AM','3:20 PM','2.12'],
    ['9:55 AM','3:22 PM','2.14'],

]

headings = ['In','Out','Hours']






table_layout = [
        [sg.Table(values=data,
        headings = headings,
        auto_size_columns=True,
        justification='right',
        num_rows=15,
        key = '-TABLE-',
        row_height = 35)]
]

time_field_size = (4,1)
layout = [
    [sg.Text('TimeCheck',font = ("Helvetica",20))],
    [sg.Text('In:'), sg.Input(size=time_field_size,key='-INPUT_IN_TIME-'),sg.DropDown(['AM','PM'],key = '-IN_DAYTIME_STATUS-',readonly=True) ,sg.Text('Out:'),\
        sg.Input(size=time_field_size,key='-INPUT_OUT_TIME-',),sg.DropDown(['AM','PM'],key = '-OUT_DAYTIME_STATUS-',readonly=True),sg.Button('+')],
    [table_layout]
]
window = sg.Window("TimeCheck",layout)

while True:
    event,values = window.read()
    if event == 'Exit' or event == sg.WIN_CLOSED:
        break
    if event == '+':

        in_time = values['-INPUT_IN_TIME-']
        in_time_daytime_status = values['-IN_DAYTIME_STATUS-']
        out_time = values['-INPUT_OUT_TIME-']
        out_time_daytime_status = values['-OUT_DAYTIME_STATUS-']
        in_and_out_time = [in_time,out_time]
        in_and_out_statuses = [in_time_daytime_status,out_time_daytime_status]
        #if len(in_time)
        counter = 0
        parced_in_out_times = []
        for timevalue in in_and_out_time:
            if validate_time_input(timevalue):
                validated_time=validate_time_input(timevalue)
                #adding user input into the data list and updating table values accordingly

                if in_and_out_statuses[counter] == 'PM':
                        validated_time =validated_time+ datetime.timedelta(hours=12)
                    

                parced_in_out_times.append(validated_time)
                
                counter +=1
            else:
                sg.popup('Enter time in proper format','HH:SS, Ex. 9:45')
                break
        if counter <= 2:
            time_worked = parced_in_out_times[1]-parced_in_out_times[0]
            time_worked_dtf = time.gmtime(time_worked.total_seconds())
            data.append([in_time +' '+in_time_daytime_status,out_time+' '+out_time_daytime_status,str(time_worked_dtf.tm_hour)+'.'+str(time_worked_dtf.tm_min)])
            window['-TABLE-'].update(values=data)

        
        
        
        print(parced_in_out_times)
window.close()